#include "KernelBase.hpp"
#include "kernelJITCompileCommands.hpp" // generated by cmake / jit python script / contains needed macros

namespace geosx
{
  namespace finiteElement
  {

#if defined( GEOSX_USE_CUDA )
  constexpr bool compilerIsNVCC = true;
#else
  constexpr bool compilerIsNVCC = false;
#endif

    jitti::CompilationInfo getKernelCompilationInfo( const string & header )
    {
      jitti::CompilationInfo info;
      info.compileCommand = kernelJIT_COMPILE_COMMAND;
      info.compilerIsNVCC = compilerIsNVCC;
      info.linker = kernelJIT_LINKER;
      info.linkArgs = kernelJIT_LINK_ARGS;
      info.headerFile = header;
      info.templateFunction = "geosx::finiteElement::buildKernelAndInvoke";
      return info;
    }

    jitti::CompilationInfo getSparsityCompilationInfo( const string & header )
    {
      jitti::CompilationInfo info;
      info.compileCommand = kernelJIT_COMPILE_COMMAND;
      info.compilerIsNVCC = compilerIsNVCC;
      info.linker = kernelJIT_LINKER;
      info.linkArgs = kernelJIT_LINK_ARGS;
      info.headerFile = header;
      info.templateFunction = "geosx::finiteElement::buildSparsityAndInvoke";
      return info;
    }
  }
}

